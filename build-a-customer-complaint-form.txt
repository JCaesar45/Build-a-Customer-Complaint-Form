** start of index.html **

<!DOCTYPE html>
<html lang="en">

<head>
    <title>Customer Complaint Form</title>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="styles.css">
</head>

<body>
    <h1>Complaint Form</h1>
    <form id="form">
        <fieldset id="personal-info">
            <div>
                <label for="full-name">Full Name:</label>
                <input type="text" id="full-name" name="full-name" placeholder="John Doe">
            </div>

            <div>
                <label for="email">Email Address:</label>
                <input type="email" id="email" name="email" placeholder="example@domain.com">
            </div>
        </fieldset>
        <hr>
        <fieldset id="product-info">
            <div>
                <label for="order-no">Order No:</label>
                <input type="text" id="order-no" name="order-no" placeholder="2024######">
            </div>
            <div>
                <label for="product-code">Product Code:</label>
                <input type="text" id="product-code" name="product-code" placeholder="XX##-X###-XX#">
            </div>
            <div>
                <label for="quantity">Quantity:</label>
                <input type="number" id="quantity" name="quantity" min="1">
            </div>
        </fieldset>

        <fieldset id="complaints-group">
            <legend>Complaint Reason:</legend>
            <div>
                <input type="checkbox" id="damaged-product" name="complaint" value="damaged-product">
                <label for="damaged-product">Damaged Product</label>
            </div>

            <div>
                <input type="checkbox" id="nonconforming-product" name="complaint" value="nonconforming-product">
                <label for="nonconforming-product">Nonconforming Product</label>
            </div>

            <div>
                <input type="checkbox" id="delayed-dispatch" name="complaint" value="delayed-dispatch">
                <label for="delayed-dispatch">Delayed Dispatch</label>
            </div>

            <div>
                <input type="checkbox" id="other-complaint" name="complaint" value="other">
                <label for="other-complaint">Other</label>
            </div>
        </fieldset>

        <div id="complaint-description-container">
            <legend>Description of Complaint Reason</legend>
            <textarea placeholder="Describe the reason of your complaint in at least 20 characters"
                name="complaint-textarea" id="complaint-description"></textarea>
        </div>

        <fieldset id="solutions-group">
            <legend>Desired Solution</legend>
            <input type="radio" name="solutions" id="refund" value="refund">
            <label for="refund">Refund</label>

            <input type="radio" name="solutions" id="exchange" value="exchange">
            <label for="exchange">Exchange</label>

            <input type="radio" name="solutions" id="other-solution" value="other">
            <label for="other-solution">Other</label>
        </fieldset>

        <div id="solution-description-container">
            <legend>Description of Desired Solution</legend>
            <textarea placeholder="Describe the desired solution to your issue in at least 20 characters"
                name="solution-textarea" id="solution-description"></textarea>
        </div>
        <div id="btn-container">
            <button type="submit" id="submit-btn">Submit</button>
            <span id="message-box" aria-live="polite"></span>
        </div>

    </form>

    <script src="script.js"></script>
</body>

</html>

** end of index.html **

** start of styles.css **

* {
    box-sizing: border-box;
}

h1 {
    text-align: center;
}

#form {
    max-width: 70%;
    margin: auto;
    border-radius: 10px;
    box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;
    padding: 10px;
}

input {
    border-color: rgb(118, 118, 118);
}

#personal-info input, #product-info input {
    width: 100%;
    margin-bottom: 10px;
}


fieldset {
    margin-bottom: 10px;
    border-radius: 5px;
    border-color: rgb(118, 118, 118);
}

textarea {
    width: 100%;
    border-color: rgb(118, 118, 118);
}

#btn-container {
    display: flex;
    justify-content: space-between;
    align-items: center;
}

#submit-btn, #clear-btn {
    margin: 10px 15px 0;
}

** end of styles.css **

** start of script.js **

// script.js

function validateForm() {
  const results = {};

  const fullName = document.querySelector('#full-name').value.trim();
  const email = document.querySelector('#email').value.trim();
  const orderNo = document.querySelector('#order-no').value.trim();
  const productCode = document.querySelector('#product-code').value.trim();
  const quantity = document.querySelector('#quantity').value.trim();

  const complaintsCheckboxes = document.querySelectorAll('#complaints-group input[type="checkbox"]');
  const complaintDescription = document.querySelector('#complaint-description').value.trim();

  const solutionsRadios = document.querySelectorAll('#solutions-group input[type="radio"]');
  const solutionDescription = document.querySelector('#solution-description').value.trim();

  // #full-name not empty
  results["full-name"] = fullName.length > 0;

  // #email valid email format (simple regex)
  results["email"] = /^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(email);

  // #order-no sequence of ten numbers starting with 2024
  results["order-no"] = /^2024\d{6}$/.test(orderNo);

  // #product-code pattern XX##-X###-XX# (X = letter, # = digit)
  results["product-code"] = /^[A-Za-z]{2}\d{2}-[A-Za-z]\d{3}-[A-Za-z]{2}\d$/.test(productCode);

  // #quantity positive integer
  results["quantity"] = /^[1-9]\d*$/.test(quantity);

  // #complaints-group at least one checkbox checked
  const complaintChecked = Array.from(complaintsCheckboxes).some(cb => cb.checked);
  results["complaints-group"] = complaintChecked;

  // #complaint-description at least 20 chars if #other-complaint checked
  const otherComplaintChecked = document.querySelector('#other-complaint').checked;
  results["complaint-description"] = otherComplaintChecked ? complaintDescription.length >= 20 : true;

  // #solutions-group one radio selected
  const solutionSelected = Array.from(solutionsRadios).some(radio => radio.checked);
  results["solutions-group"] = solutionSelected;

  // #solution-description at least 20 chars if #other-solution checked
  const otherSolutionChecked = document.querySelector('#other-solution').checked;
  results["solution-description"] = otherSolutionChecked ? solutionDescription.length >= 20 : true;

  return results;
}

function isValid(validationResults) {
  return Object.values(validationResults).every(val => val === true);
}

function setBorderColor(element, valid) {
  element.style.borderColor = valid ? 'green' : 'red';
}

function validateAndStyleInput(event) {
  const validationResults = validateForm();
  const target = event.target;

  // Validate inputs by ID
  switch (target.id) {
    case 'full-name':
      setBorderColor(target, validationResults["full-name"]);
      break;
    case 'email':
      setBorderColor(target, validationResults["email"]);
      break;
    case 'order-no':
      setBorderColor(target, validationResults["order-no"]);
      break;
    case 'product-code':
      setBorderColor(target, validationResults["product-code"]);
      break;
    case 'quantity':
      setBorderColor(target, validationResults["quantity"]);
      break;
    case 'complaint-description':
      setBorderColor(target, validationResults["complaint-description"]);
      break;
    case 'solution-description':
      setBorderColor(target, validationResults["solution-description"]);
      break;
  }

  // Handle checkboxes inside #complaints-group
  if (target.closest('#complaints-group')) {
    const complaintsFieldset = document.querySelector('#complaints-group');
    setBorderColor(complaintsFieldset, validationResults["complaints-group"]);
  }

  // Handle radios inside #solutions-group
  if (target.closest('#solutions-group')) {
    const solutionsFieldset = document.querySelector('#solutions-group');
    setBorderColor(solutionsFieldset, validationResults["solutions-group"]);
  }
}

document.addEventListener('DOMContentLoaded', () => {
  const form = document.querySelector('#form');

  // Inputs & textareas to watch for changes
  [
    '#full-name',
    '#email',
    '#order-no',
    '#product-code',
    '#quantity',
    '#complaint-description',
    '#solution-description'
  ].forEach(selector => {
    const el = document.querySelector(selector);
    if (el) el.addEventListener('change', validateAndStyleInput);
  });

  // Checkbox group
  const complaintsCheckboxes = document.querySelectorAll('#complaints-group input[type="checkbox"]');
  complaintsCheckboxes.forEach(cb => cb.addEventListener('change', validateAndStyleInput));

  // Radio group
  const solutionsRadios = document.querySelectorAll('#solutions-group input[type="radio"]');
  solutionsRadios.forEach(radio => radio.addEventListener('change', validateAndStyleInput));

  // Form submission handler
  form.addEventListener('submit', e => {
    e.preventDefault();

    const validationResults = validateForm();

    // Highlight invalid fields
    for (const [key, valid] of Object.entries(validationResults)) {
      switch (key) {
        case 'full-name':
        case 'email':
        case 'order-no':
        case 'product-code':
        case 'quantity':
        case 'complaint-description':
        case 'solution-description':
          const el = document.querySelector(`#${key}`);
          if (el) setBorderColor(el, valid);
          break;
        case 'complaints-group':
          const complaintsFieldset = document.querySelector('#complaints-group');
          if (complaintsFieldset) setBorderColor(complaintsFieldset, valid);
          break;
        case 'solutions-group':
          const solutionsFieldset = document.querySelector('#solutions-group');
          if (solutionsFieldset) setBorderColor(solutionsFieldset, valid);
          break;
      }
    }

    if (isValid(validationResults)) {
      // Success behavior
      alert('Form submitted successfully!');
      form.reset();

      // Clear all border colors after reset
      document.querySelectorAll('input, textarea, fieldset').forEach(el => {
        el.style.borderColor = '';
      });
    } else {
      alert('Please fix the errors highlighted in red.');
    }
  });
});


** end of script.js **

